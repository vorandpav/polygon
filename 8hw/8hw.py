import numpy as np


def find_longest_even_sequence(arr):
    # Маска чётных чисел
    even_mask = (arr % 2 == 0)
    # для массива [1, 2, 3, 4, 6, 7, 14, 10, 12, 12, 19] маска будет выглядеть так:
    # [False, True, False, True, True, False, True, True, True, True, False]

    # "границы" последовательностей чётных чисел
    # 1 - начало чётной последовательности (на изначальном массиве - включительно)
    # -1 - конец чётной последовательности (на изначальном массиве - не включительно)
    borders = np.diff(  # разность между соседними элементами
        np.concatenate(([0],  # добавление 0 в начало для корректной работы np.diff
                        even_mask.view(np.int8),  # превращение маски в массив чисел 0 и 1
                        [0]))  # добавление 0 в конец для корректной работы np.diff
    )
    # для массива [1, 2, 3, 4, 6, 7, 14, 10, 12, 12, 19] границы будут выглядеть так:
    # [0, 1, -1, 1, 0, -1, 1, 0, 0, 0, -1, 0]

    # Начала и окончания последовательностей
    start_indices = np.where(borders == 1)[0]
    # np.where(borders == 1) возвращает кортеж из одного элемента - массива индексов,
    # так как массив borders одномерный
    # для массива [0, 1, -1, 1, 0, -1, 1, 0, 0, 0, -1, 0] результат np.where(borders == 1) будет выглядеть так:
    # (array([1, 3, 6]),)
    # и соответственно np.where(borders == 1)[0] будет выглядеть так:
    # [1, 3, 6]
    end_indices = np.where(borders == -1)[0]
    # для массива [0, 1, -1, 1, 0, -1, 1, 0, 0, 0, -1, 0] результат np.where(borders == -1)[0] будет выглядеть так:
    # [2, 5, 10]

    # Длины всех последовательностей
    lengths = end_indices - start_indices
    # для массивов [1, 3, 6] и [2, 5, 10] результат будет выглядеть так:
    # [1, 2, 4]

    # Найти индекс самой длинной последовательности
    max_length_idx = np.argmax(lengths) # возвращает индекс максимального элемента в массиве
    # для массива [1, 2, 4] результат будет 2

    # Длина и начало самой длинной последовательности
    max_length = lengths[max_length_idx]
    # для массива [1, 2, 4] результат будет 4
    start = start_indices[max_length_idx]
    # для массива [1, 3, 6] результат будет 6

    # Извлечение самой длинной последовательности
    longest_sequence = arr[start:start + max_length]
    # для массива [1, 2, 3, 4, 6, 7, 14, 10, 12, 12, 19] результат будет [14, 10, 12, 12]

    return longest_sequence, max_length


arr = np.array([1, 2, 3, 4, 6, 7, 14, 10, 12, 12, 19])

longest_sequence, max_length = find_longest_even_sequence(arr)

print(f"Самая длинная последовательность чётных чисел: {longest_sequence}")

arr = np.array([1, 2, 3, 4, 6, 7, 14, 10, 12, 12, 19, 20, 20, 20, 20, 20])

longest_sequence, max_length = find_longest_even_sequence(arr)

print(f"Самая длинная последовательность чётных чисел: {longest_sequence}")

arr = np.array([24, 2, 4, 5])

longest_sequence, max_length = find_longest_even_sequence(arr)

print(f"Самая длинная последовательность чётных чисел: {longest_sequence}")